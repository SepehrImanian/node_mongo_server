#!/bin/bash

DISTRO=$1
COMMAND=$2
FLAG=$3
PORT=$4

if [ -z "$1" ] || [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
   cat ./manual/help.txt
   exit 1
elif [[ $DISTRO = "ubuntu" ]] || [[ $DISTRO = "centos" ]]; then
   cat ./manual/help_distro.txt
   exit 1
fi

check_pakage_install() {

   if [[ $DISTRO = "centos" ]] && [[ "$COMMAND" = "install" ]]; then
        yum install -y firewalld
	systemctl start firewalld
        systemctl enable firewalld
	echo "centos dependency installed"
   elif [[ $DISTRO = "ubuntu" ]] && [[ "$COMMAND" = "install" ]]; then
        sudo apt install -y ufw
	sudo ufw enable
	y
	echo "ubuntu dependency installed"
   elif [[ "$DISTRO" = "install" ]]; then
	# add to path  
	echo "sepi install"
   fi

}

check_pakage_install

_firewall() {

   open_port_ubuntu() {
      sudo ufw allow $PORT
      echo "open $PORT on ubuntu"
   }

   close_port_ubuntu() {
      sudo ufw deny $PORT
      echo "close $PORT port on ubuntu"
   }

   open_port_centos() {
      firewall-cmd --permanent --zone=public --add-port=$PORT
      echo "open $PORT port on centos"
   }

   close_port_centos() {
      firewall-cmd --permanent --zone=public --remove-port=$PORT
      echo "close $PORT port on centos"
   }

   status_firewall() {
      if [[ $DISTRO = "centos" ]] && [[ "$COMMAND" = "status" ]]; then
	echo "--------------- ports ----------------"
	firewall-cmd --permanent --zone=public --list-ports
      elif [[ $DISTRO = "ubuntu" ]] && [[ "$COMMAND" = "status" ]]; then
	echo "--------------- ports ----------------"
	sudo ufw status verbose
      fi
   }

}

_firewall
status_firewall


if   [[ $DISTRO = "centos" ]] && [[ "$COMMAND" = "port" ]] && [[ "$FLAG" = "open" ]]; then
	open_port_centos
elif [[ $DISTRO = "centos" ]] && [[ "$COMMAND" = "port" ]] && [[ "$FLAG" = "close" ]]; then
	close_port_centos
elif [[ $DISTRO = "ubuntu" ]] && [[ "$COMMAND" = "port" ]] && [[ "$FLAG" = "open" ]]; then
	open_port_ubuntu
elif [[ $DISTRO = "ubuntu" ]] && [[ "$COMMAND" = "port" ]] && [[ "$FLAG" = "close" ]]; then
	close_port_ubuntu
fi
